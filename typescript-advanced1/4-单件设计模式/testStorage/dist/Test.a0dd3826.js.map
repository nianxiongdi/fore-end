{"version":3,"sources":["src/MyLocalStorage.ts","src/Test.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;ACAA,IAAA,gBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AAEA,gBAAA,CAAA,OAAA,CAAe,WAAf;;;;;IDMM;AAGJ,4BAAA;AAAA;AAAwB,IAExB;AACA;AACA;AACA;AACA;;;;;WAEO,uBAAkB;AACvB,UAAI,KAAK,YAAT,EAAuB;AACrB,eAAO,KAAK,YAAZ;AACD;;AACD,aAAO,IAAI,cAAJ,EAAP;AACD,MACD;;;;WACO,iBAAe,GAAf,EAA4B,KAA5B,EAAsC;AAC3C,MAAA,YAAY,CAAC,OAAb,CAAqB,GAArB,EAA0B,IAAI,CAAC,SAAL,CAAe,KAAf,CAA1B;AACD;;;WAEM,iBAAe,GAAf,EAA0B;AAC/B,UAAI,KAAK,GAAG,YAAY,CAAC,OAAb,CAAqB,GAArB,CAAZ;AACA,aAAO,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,KAAX,CAAH,GAAuB,IAAnC;AACD;;;;;;AAGH,OAAA,CAAA,OAAA,GAAe,cAAf","file":"Test.a0dd3826.js","sourceRoot":"..","sourcesContent":["/**\r\n * 构建单间设计模式：\r\n *  1. 把构造器设置为私有的，不允许外部来创建类的实例\r\n *  2. 至少应该提供一个外部访问属性或方法，外部可以通过这个方法或属性来得到一个对象，\r\n *      所以应该把这个方法设置为静态方法\r\n *  3. 外部调用第二部提供的静态方法来获取一个对象\r\n */\r\n\r\nclass MyLocalStorage {\r\n  // 静态属性\r\n  static localStorage: MyLocalStorage;\r\n  private constructor() {}\r\n\r\n  // 提供外部可以访问的方法\r\n  // 1. 带static关键字的方法是静态方法\r\n  // 2. 静态方法和对象无关，外部的对象不能调用静态方法和静态属性\r\n  // 3. 外部可以通过类名来调用\r\n  // 4. 静态方法不可以访问实例属性或实例方法\r\n\r\n  public static getInstance() {\r\n    if (this.localStorage) {\r\n      return this.localStorage;\r\n    }\r\n    return new MyLocalStorage();\r\n  }\r\n  // 保存 key-value\r\n  public static setItem(key: string, value: any) {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n\r\n  public static getItem(key: string) {\r\n    let value = localStorage.getItem(key);\r\n    return value ? JSON.parse(value) : null;\r\n  }\r\n}\r\n\r\nexport default MyLocalStorage;\r\n","import MyLocalStorage from \"./MyLocalStorage\";\r\n\r\nMyLocalStorage.getInstance();\r\n"]}